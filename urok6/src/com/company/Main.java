// определяет набор классов, которые ему пренадлежат
//после package указывается название пакета, которому будет принадлежать класс, объявленный в данном файле
package com.company;

public class Main {
    // Main запускает программу без нее Java не работает - класс
    // main m =new main

    public static void main(String[] args) {
        // создание объекта
        Car car = new Car ();
        car.color = "white";
        car.tankVolume = 112;
        // при осуществлении операции  присвоения м/у примитивными типами (int, float и т.д)
        // значение в памяти копируются
        // при осуществлении операции присваивания между не примитивными типами (объектами класса)
        // копируется только ссылка на объект

        Car car2= car; //  в car2 запишется копия ссылки на объект car
        car2.color ="red";
        System.out.println(car.color);
        setDoorsCount(car,5);
        System.out.println(car.doorsCount);
        car.setMaxSpeed(350);
        car.setMaxSpeed(123);
        System.out.println(car.getMaxSpeed());
    }
    //в качестве значения аргумента пользовательского(непримитивного) типа (класса) всегда передается ссылка
    // на объект (не его копия)
    public static void setDoorsCount(Car car, int count){
       car.doorsCount =count;

    }


    // ООП - объектно -ориентированное програмирование
    // Принципы ООП :
    // 1 Инкапсуляция - способность создавать объекты
    // 2 Полиморфизм
    // 3 Наследование
    // 4 Абстракция

    // Объект в Java - сущность. которая содержит набор свойств (атрибутов) и может выполнять заданный набор действий
    // Пример: объект car
    // свойства : color, name , view, ......
    // действия : drive? stpo? break,.....
    // Для создания объкта (-ов) необходиом описать класс (class)


}
